<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="edd89ab6-80ef-4e6f-80bd-46213383d0fb" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/config/getAxious.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/components/boxContainer/BoxContainer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/components/buttonContainer/ButtonContainer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/components/circleIconContainer/CircleIconContainer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/components/container/Container.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/components/gridContainer/GridContainer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/components/itemContainer/ItemContainer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/components/itemsContainer/ItemsContainer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/components/toolTipContainer/ToolTipContainer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/components/typographyContainer/TypographyContainer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/constants/headerSettings.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/constants/pagesAppBar.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/hooks/useTypedSelector.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/actionCreators/questionAction.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/actionCreators/questionAreaAction.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/actionCreators/questionSetAction.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/actionCreators/toastMessageAction.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/reducer/rootReducer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/selectors/questionAreaSelector.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/selectors/questionSelector.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/selectors/questionSetSelector.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/store.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/thunk/questionAreaThunk.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/thunk/questionSetThunk.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/thunk/questionThunk.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/core/redux/thunk/toastMessageThunk.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/questionAreaDescription/QuestionAreaDescription.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/questionAreaForm/questionSetsForQuestionAreaForm/questionSetsForQuestionAreaForm.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/questionAreas/QuestionAreas.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/questionAreas/questionAreaItem/QuestionAreaItem.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/questionAreas/questionAreaItem/style.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.eslintrc.json" beforeDir="false" afterPath="$PROJECT_DIR$/.eslintrc.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.husky/pre-commit" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/ais.front.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.prettierrc.json" beforeDir="false" afterPath="$PROJECT_DIR$/.prettierrc.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lintstagedrc.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/config/config.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/config/config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/config/getAxious.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/common/defaultDTO/defaultQuestionArea.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/common/defaultDTO/defaultQuestionArea.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/common/defaultDTO/defaultQuestionSet.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/common/defaultDTO/defaultQuestionSet.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/components/header/Header.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/components/header/Header.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/constants/mainRoutes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/constants/mainRoutes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/interfaces/question/question.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/interfaces/question/question.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/interfaces/questionArea/questionArea.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/interfaces/questionArea/questionArea.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/interfaces/questionSet/questionSet.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/interfaces/questionSet/questionSet.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/interfaces/toastMessage.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/interfaces/toastMessage.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/companyService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/companyService.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/employeeService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/employeeService.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/intervieweeService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/intervieweeService.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/questionAreaService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/questionAreaService.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/questionAreasQuestionSetsService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/questionAreasQuestionSetsService.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/questionIntervieweeAnswer.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/questionIntervieweeAnswer.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/questionService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/questionService.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/questionSetService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/questionSetService.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/questionsQuestionSetsService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/questionsQuestionSetsService.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/sessionService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/sessionService.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/services/trueAnswerService.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/services/trueAnswerService.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questionArea/actionCreators.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questionArea/actions.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questionArea/constants.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questionArea/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questionArea/reducer.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questionSets/action.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questionSets/actionCreator.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questionSets/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questionSets/reducer.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questions/action.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questions/actionCreator.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questions/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/questions/reducer.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/toastMessage/actionCreators.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/toastMessage/actions.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/toastMessage/constants.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/toastMessage/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/toastMessage/reducer.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/toastMiddleware/toastMiddleware.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/core/store/typing.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/questionArea/QuestionArea.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/questionArea/components/questionAreaTableHeader/QuestionAreaTableHeader.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/questionArea/components/questionAreaTableRow/QuestionAreaTableRow.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/questionAreaForm/QuestionAreaForm.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/questionAreaForm/QuestionAreaForm.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/questionSetAdd/QuestionSetAdd.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/questionSetAdd/QuestionSetAdd.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/questionSetDescription/QuestionSetDescription.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/questionSetDescription/QuestionSetDescription.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/questionsSets/QuestionsSets.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/questionsSets/QuestionsSets.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/questionsSets/questionSetItem/QuestionSetItem.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/questionsSets/questionSetItem/QuestionSetItem.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/session/Session.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/session/Session.tsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
        <option value="TypeScript JSX File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectId" id="2843xd26SuDSgrXZTJsrXtoVUX4" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_package_manager_path" value="yarn" />
    <property name="ts.external.directory.path" value="C:\Program Files\JetBrains\WebStorm 2021.3.2\plugins\JavaScriptLanguage\jsLanguageServicesImpl\external" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="edd89ab6-80ef-4e6f-80bd-46213383d0fb" name="Changes" comment="" />
      <created>1650462283127</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1650462283127</updated>
      <workItem from="1650462285982" duration="6373000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>